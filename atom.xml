<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>山雨</title>
  <icon>https://www.gravatar.com/avatar/1a3649cd63d7fb33ce6ae5837c507f56</icon>
  <subtitle>好累！想摸鱼ヽ(*。&gt;Д&lt;)o゜</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-10-26T07:39:33.754Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>山雨</name>
    <email>1647170041@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Lyapunov优化隐私优化卸载学习记录</title>
    <link href="http://example.com/undefined/939702da.html"/>
    <id>http://example.com/undefined/939702da.html</id>
    <published>2022-10-26T15:15:03.000Z</published>
    <updated>2022-10-26T07:39:33.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-基本信息概念"><a href="#1-基本信息概念" class="headerlink" title="1.基本信息概念"></a>1.基本信息概念</h1><p>​    </p>]]></content>
    
    
    <summary type="html">这是基于Lyapunov优化的隐私卸载学习笔记</summary>
    
    
    
    <category term="stitp学习" scheme="http://example.com/categories/stitp%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>typora数学公式写法</title>
    <link href="http://example.com/undefined/fbe62a7c.html"/>
    <id>http://example.com/undefined/fbe62a7c.html</id>
    <published>2022-10-23T16:04:57.000Z</published>
    <updated>2022-10-26T07:39:33.754Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-数学公式编辑栏"><a href="#1-数学公式编辑栏" class="headerlink" title="1.数学公式编辑栏"></a>1.数学公式编辑栏</h2><p>​    ctrl+shift+M</p><p>​        公式分行用\，空格用一个斜线</p><h2 id="2-常用符号代码"><a href="#2-常用符号代码" class="headerlink" title="2.常用符号代码"></a>2.常用符号代码</h2><h3 id="1-上下标正负无穷"><a href="#1-上下标正负无穷" class="headerlink" title="1 上下标正负无穷"></a>1 上下标正负无穷<img src="../imgs/image-20221023161422732.png" alt="image-20221023161422732"></h3><h3 id="2-加减乘"><a href="#2-加减乘" class="headerlink" title="2 加减乘"></a>2 加减乘</h3><p><img src="../imgs/image-20221023161440693.png" alt="image-20221023161440693"></p><h3 id="3-三角函数"><a href="#3-三角函数" class="headerlink" title="3 三角函数"></a>3 三角函数</h3><p><img src="../imgs/image-20221023161523041.png" alt="image-20221023161523041"></p><h3 id="4-矢量累加"><a href="#4-矢量累加" class="headerlink" title="4 矢量累加"></a>4 矢量累加</h3><p><img src="../imgs/image-20221023161536637.png" alt="image-20221023161536637"></p><h3 id="5-希腊字母"><a href="#5-希腊字母" class="headerlink" title="5 希腊字母"></a>5 希腊字母<img src="../imgs/image-20221023161555893.png" alt="image-20221023161555893"></h3><h3 id="6-关系运算"><a href="#6-关系运算" class="headerlink" title="6 关系运算"></a>6 关系运算</h3><p><img src="../imgs/image-20221023161611256.png" alt="image-20221023161611256"></p><h2 id="3-矩阵"><a href="#3-矩阵" class="headerlink" title="3.矩阵"></a>3.矩阵</h2><h3 id="1-简单矩阵"><a href="#1-简单矩阵" class="headerlink" title="1 简单矩阵"></a>1 简单矩阵</h3><p><img src="../imgs/image-20221023161647817.png" alt="image-20221023161647817"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> $$</span><br><span class="line">\begin&#123;matrix&#125;</span><br><span class="line"> 1 &amp; 2 &amp; 3 \\</span><br><span class="line"> 4 &amp; 5 &amp; 6 \\</span><br><span class="line"> 7 &amp; 8 &amp; 9 </span><br><span class="line">\end&#123;matrix&#125; \tag&#123;1&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p><img src="../imgs/image-20221023161654846.png" alt="image-20221023161654846"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"> \left\&#123;</span><br><span class="line"> \begin&#123;matrix&#125;</span><br><span class="line">   1 &amp; 2 &amp; 3 \\</span><br><span class="line">   4 &amp; 5 &amp; 6 \\</span><br><span class="line">   7 &amp; 8 &amp; 9</span><br><span class="line">  \end&#123;matrix&#125;</span><br><span class="line">  \right\&#125; \tag&#123;2&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p><img src="../imgs/image-20221023161711597.png" alt="image-20221023161711597"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"> \left[</span><br><span class="line"> \begin&#123;matrix&#125;</span><br><span class="line">   1 &amp; 2 &amp; 3 \\</span><br><span class="line">   4 &amp; 5 &amp; 6 \\</span><br><span class="line">   7 &amp; 8 &amp; 9</span><br><span class="line">  \end&#123;matrix&#125;</span><br><span class="line">  \right] \tag&#123;3&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p><img src="../imgs/image-20221023161728167.png" alt="image-20221023161728167"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"> \left(</span><br><span class="line"> \begin&#123;matrix&#125;</span><br><span class="line">   1 &amp; 2 &amp; 3 \\</span><br><span class="line">   4 &amp; 5 &amp; 6 \\</span><br><span class="line">   7 &amp; 8 &amp; 9</span><br><span class="line">  \end&#123;matrix&#125;</span><br><span class="line">  \right) \tag&#123;4&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h3 id="2-复杂矩阵"><a href="#2-复杂矩阵" class="headerlink" title="2 复杂矩阵"></a>2 复杂矩阵</h3><p><img src="../imgs/image-20221023161744783.png" alt="image-20221023161744783"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"> \left\&#123;</span><br><span class="line"> \begin&#123;matrix&#125;</span><br><span class="line"> 1      &amp; 2        &amp; \cdots &amp; 5        \\</span><br><span class="line"> 6      &amp; 7        &amp; \cdots &amp; 10       \\</span><br><span class="line"> \vdots &amp; \vdots   &amp; \ddots &amp; \vdots   \\</span><br><span class="line"> \alpha &amp; \alpha+1 &amp; \cdots &amp; \alpha+4 </span><br><span class="line"> \end&#123;matrix&#125;</span><br><span class="line"> \right\&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><h2 id="4-方程等条件表达式"><a href="#4-方程等条件表达式" class="headerlink" title="4.方程等条件表达式"></a>4.方程等条件表达式</h2><p><img src="../imgs/image-20221023161839739.png" alt="image-20221023161839739"></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\begin&#123;cases&#125;</span><br><span class="line">3x + 5y +  z \\</span><br><span class="line">7x - 2y + 4z \\</span><br><span class="line">-6x + 3y + 2z</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><p><img src="../imgs/image-20221023161850602.png" alt="image-20221023161850602"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">f(n) =</span><br><span class="line">\begin&#123;cases&#125; </span><br><span class="line">n/2,  &amp; \text&#123;if &#125;n\text&#123; is even&#125; \\</span><br><span class="line">3n+1, &amp; \text&#123;if &#125;n\text&#123; is odd&#125;</span><br><span class="line">\end&#123;cases&#125;</span><br><span class="line">$$</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">markdown常用数学语法</summary>
    
    
    
    <category term="buttfly魔改记录" scheme="http://example.com/categories/buttfly%E9%AD%94%E6%94%B9%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="butterfly" scheme="http://example.com/tags/butterfly/"/>
    
  </entry>
  
  <entry>
    <title>heft、cpop任务表调度算法学习</title>
    <link href="http://example.com/undefined/dfe10bb5.html"/>
    <id>http://example.com/undefined/dfe10bb5.html</id>
    <published>2022-10-10T19:56:36.000Z</published>
    <updated>2022-10-26T07:39:33.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-基本概念信息"><a href="#1-基本概念信息" class="headerlink" title="1.基本概念信息"></a>1.基本概念信息</h1><h2 id="1-DAG"><a href="#1-DAG" class="headerlink" title="1.DAG"></a>1.DAG</h2><p>​    DAG(<strong>Directed Acyclic Graph)</strong>，中文名”有向无环图”。”有向”指的是有方向，准确的说应该是同一个方向，”无环”则指够不成闭环。</p><p>​    <img src="../imgs/image-20221010200716984.png" alt="image-20221010200716984"></p><p>​    <strong>tip：</strong>在DAG中，如图所示，方块（vertex）表示的是一笔笔的交易，而虚线、（edge）表示的是验证关系。每一个新加入的交易都需要挑两个没有被验证过的交易来验证这两个交易的合法性。方块6就是还未被验证过的交易，也称为tip。tip是DAG最重要的概念。</p><h2 id="2-异构多核和同构多核"><a href="#2-异构多核和同构多核" class="headerlink" title="2.异构多核和同构多核"></a>2.异构多核和同构多核</h2><p>​    从硬件的角度来看，多核设计分为两类。如果所有的核心或CPU具有相同的构架，那么定义为<code>同构多核（homogeneous）</code>；如果架构不同，那么称为<code>异构多核（heterogeneous）</code>。从应用来看，同构多核处理器中大多数由通用处理器核构成，每个核可以独立运行，类似单核处理器。而异构多核处理器往往同时继承了通用处理器、DSP、FPGA、媒体处理器、网络处理器等。每个内核针对不同的需求设定的，从而提高应用的计算性能或实时性能。</p><h2 id="3-np问题"><a href="#3-np问题" class="headerlink" title="3.np问题"></a>3.np问题</h2><p><strong>P类问题</strong>(Polynomial,多项式)：是可以在多项式时间内被确定(通常意义的计算机)解决的问题。</p><p><strong>np类问题</strong>：<strong>不知道</strong>这个问题是不是存在多项式时间复杂度o(x^n)内的算法，所以叫non-deterministic非确定性，但是我们可以在多项式时间内验证并得出这个问题的一个正确解，可用一定数量的运算去解决多项式时间内可解决的问题</p><p>例：旅行家推销问题(TSP)。即有一个推销员，要到n个城市推销商品，他要找出一个包含所有n个城市的环路，这个环路路径小于a。我们知道这个问题如果单纯的用枚举法来列举的话会有(n-1)! 种，已经不是多项式时间的算法了。但我们可以猜，假设我人品好，猜几次就猜中了一条小于长度a的路径，问题解决。但不可能每次都猜的准。也就是，我们能在多项式的时间内验证并得出问题的正确解，可是我们却不知道该问题是否存在一个多项式时间的算法，每次都能解决他(注意，这里是不知道，不是不存在)</p><p><strong>np完全问题</strong>：我们称一个判定问题D是<strong>np完全问题</strong>，条件是：</p><p>（1）D属于NP类；</p><p>（2）NP中的任何问题都能够在多项式时间内转化为D。</p><p><strong>np难问题</strong>（NP-hard Problem ）</p><p>​    另外，一个满足条件（2）但不满足条件（1）的问题被称为<strong>np难问题</strong>。也就是说，NP难问题不一定是NP类问题， 正式地说，一个NP难问题至少跟NP完全问题一样难，也许更难！</p><h2 id="4-表调度算法"><a href="#4-表调度算法" class="headerlink" title="4.表调度算法"></a>4.表调度算法</h2><p>​    <strong>静态调度：</strong>根据 DAG中的所有任务之间的关系, 结合某种策略决定任务之间的优先级并构造一个调度列表; 然后为具有最高优先级的任务分配能够使它最快完成的资源并开始调度执行, 循环上述步骤直到 DAG中所有任务均被调度</p><p>​    <strong>动态调度：</strong>在执行完每一个任务后根据当前处理器内核的情况以及任务<br>之间的依赖关系重新计算任务的优先级。</p><h2 id="5-DAG任务模型"><a href="#5-DAG任务模型" class="headerlink" title="5.DAG任务模型"></a>5.DAG任务模型</h2><p>​    DAG表示为G=(V,E,ET,C),其中</p><p>​    V表示n个任务结点t1,t2,…,tn的集合,每一个结点vi表示DAG中的一个任务,|V|=n;</p><p>​    E表示k条有向边e1,e2,…,ek的集合,每条有向边ci,j∈E,表示任务结点ti,tj之间存在先后执行的关系,即任务tj必须在任务ti执行完成之后才能开始执行,每一条边的权值表示任务和任务之间的通信时间;</p><p>​    ET表示任务ti在处理器内核cj上的估算计算时间</p><p>​    C是任务之间通信开销的集合,在DAG中,将任务的通信开销作为边的权值 </p><h2 id="6-任务调度算法鲁棒性"><a href="#6-任务调度算法鲁棒性" class="headerlink" title="6.任务调度算法鲁棒性"></a>6.任务调度算法鲁棒性</h2><p>​    反应算法调度产生的任务处理时间的不确定程度 slack</p><p>​    其中blevel表示任务ti从出口节点最长路径的长度</p><p>​            tlevel表示从入口节点到任务ti的最长路径长度（不包含任务本身）</p><p>​    </p><p>​    <img src="../imgs/image-20221023160016544.png" alt="image-20221023160016544"></p><h2 id="7-DAG中几个名词"><a href="#7-DAG中几个名词" class="headerlink" title="7.DAG中几个名词"></a>7.DAG中几个名词</h2><p>​    <strong>关键路径</strong>（CP）：在DAG中，一条从入口节点到出口节点的最长路径称为关键路径</p><p>​     <strong>最早完成时间（EFT）</strong>：任务在处理器内核上的最早完成时间，等于任务在处理器内核上最早开始时间(EST)加上任务在处理机内核上的计算时间(ET)</p><h1 id="2-HEFT和CPOP算法"><a href="#2-HEFT和CPOP算法" class="headerlink" title="2.HEFT和CPOP算法"></a>2.HEFT和CPOP算法</h1><h2 id="1-HEFT算法"><a href="#1-HEFT算法" class="headerlink" title="1.HEFT算法"></a>1.HEFT算法</h2><p>​    heft算法又称异构最早完成时间算法。</p><p>​    在每个调度步骤中选择有<strong>最高向上排名值</strong>即最高排名的任务，将其分配给处理器，从而通过基于插入的方法最小化它最早的完成时间。</p><p>​    由于排名是通过<strong>向上遍历</strong>任务图来递归计算的，因此从退出任务开始，它被称为向上排名，是任务ni到退出任务的关键路径的长度，包括任务ni的计算长度任务ni的向上排名值定义为：<img src="../imgs/image-20221026143318146.png" alt="image-20221026143318146"></p><p>​    同理可以定义任务ni的下排值为<strong>向下遍历</strong>任务图来递归计算，是指任务入口到任务ni出口，向下排名值定义为<img src="../imgs/image-20221026143828728.png" alt="image-20221026143828728" style="zoom: 80%;" /></p><p><img src="../imgs/image-20221026142339314.png" alt="image-20221026142339314"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">从退出任务向上遍历图，计算所有任务的向上rank值Ranku（ni）</span><br><span class="line"></span><br><span class="line">将调度表上rank值按照从大致小排序</span><br><span class="line"></span><br><span class="line">while 在任务集do中有未安排的任务</span><br><span class="line"></span><br><span class="line">​在调度表中选择第一个任务ni</span><br><span class="line"></span><br><span class="line">​for 每个在处理器集合Q中的处理器pk</span><br><span class="line"></span><br><span class="line">​计算任务ni在pk上的最早完成时间</span><br><span class="line"></span><br><span class="line">​找到将任务ni分配的最小EFT对应的处理器pj并将任务ni分配给ph</span><br><span class="line"></span><br><span class="line">​end while</span><br></pre></td></tr></table></figure><h2 id="2-CPOP算法"><a href="#2-CPOP算法" class="headerlink" title="2.CPOP算法"></a>2.CPOP算法</h2><p>​    cpop通过<strong>向上和向下排名值的总和</strong>来确定任务的优先级</p><p>​    在处理器选择阶段，将关键任务安排到处理器上，从而最大限度减少关键任务的总执行时间</p><p><img src="../imgs/image-20221026143458676.png" alt="image-20221026143458676"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">从退出任务到任务入口进行向上遍历，计算所有的向上排名值ranku</span><br><span class="line"></span><br><span class="line">​从进入任务到任务出口进行向下遍历，计算所有的向下排名值rankp</span><br><span class="line"></span><br><span class="line">​计算向上和向下排名值之和作为优先级并|CP|表示</span><br><span class="line"></span><br><span class="line">​SETcp=&#123;nenrty&#125;是关键路径上的任务集，用nenrty（入口任务)替代nk</span><br><span class="line"></span><br><span class="line">​while nk不是出口任务</span><br><span class="line"></span><br><span class="line">​选择nj （nj是nk的后继任务，且nj优先级=|CP|）</span><br><span class="line"></span><br><span class="line">​若满足上条件就将nj并入SETcp集合中</span><br><span class="line"></span><br><span class="line">​用nj替代nk，即对下一个节点任务进行分析</span><br><span class="line"></span><br><span class="line">​endwhile</span><br><span class="line"></span><br><span class="line">​选择关键路径处理器Pcp，使得最小化任务的预计执行成本</span><br><span class="line"></span><br><span class="line">​依次使用进入任务初始化优先级队列</span><br><span class="line"></span><br><span class="line">​while  在任务集do中有未安排的任务</span><br><span class="line"></span><br><span class="line">​在优先级队列中选择最高优先级的任务ni</span><br><span class="line"></span><br><span class="line">​if 任务ni属于关键路径集SETup</span><br><span class="line"></span><br><span class="line">​将关键路径处理器Pcp分配给任务ni</span><br><span class="line"></span><br><span class="line">​else</span><br><span class="line"></span><br><span class="line">​在EST最小的分配方案下将处理器Pj分配给任务ni</span><br><span class="line"></span><br><span class="line">​若任务就绪就更新优先级队列</span><br><span class="line"></span><br><span class="line">​endwhile</span><br></pre></td></tr></table></figure><h1 id="3-IHEFT调度算法"><a href="#3-IHEFT调度算法" class="headerlink" title="3.IHEFT调度算法"></a>3.IHEFT调度算法</h1><p>​    1：根据任务在各个处理器内核上的执行时间方差以及通信成本的大小对DAG任务进行有优先度排序。（越大优先级越高）</p><p>​    2：利用任务复制技术，若满足复制条件就复制关键节点任务到当前处理器内核cm；若不满足复制条件，就采用heft算法将任务调度到使EST最小的处理器内核</p><p><img src="../imgs/image-20221026151156035.png" alt="image-20221026151156035"></p>]]></content>
    
    
    <summary type="html">这是论文heft、coop学习记录</summary>
    
    
    
    <category term="stitp学习" scheme="http://example.com/categories/stitp%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>html基础语法</title>
    <link href="http://example.com/undefined/dd39fbaf.html"/>
    <id>http://example.com/undefined/dd39fbaf.html</id>
    <published>2022-09-20T22:22:51.000Z</published>
    <updated>2022-10-26T07:39:33.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一-基本语法概念"><a href="#一-基本语法概念" class="headerlink" title="一.基本语法概念"></a>一.基本语法概念</h1><h2 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h2><p>  html标签由尖括号包括的关键词,如<code>&lt;html&gt;</code></p><p>  html标签通常成对出现， 如<code>&lt;html&gt;</code>（起始标签）、<code>&lt;/html&gt;</code>（结束标签）</p><p>  某些标签为单个标签出现（情况较少），如    <code>&lt;br/&gt;</code> 将其称为单标签</p><h2 id="2-标签关系"><a href="#2-标签关系" class="headerlink" title="2.标签关系"></a>2.标签关系</h2><p>   双标签关系分为：包含关系、并列关系</p><p>   包含关系：（父子关系）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt; &lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br></pre></td></tr></table></figure><p>   并列关系：(兄弟关系)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;head&gt; &lt;/head&gt;</span><br><span class="line">&lt;body&gt; &lt;/body&gt;</span><br></pre></td></tr></table></figure><h2 id="3基本网页结构标签"><a href="#3基本网页结构标签" class="headerlink" title="3基本网页结构标签"></a>3基本网页结构标签</h2><p>   <img src="../imgs/image-20221005151919158.png" alt="image-20221005151919158"></p><p>  大致格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;title&gt;第一个页面&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">第一个页面</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="4-相关声明（一定要写）"><a href="#4-相关声明（一定要写）" class="headerlink" title="4.相关声明（一定要写）"></a>4.相关声明（一定要写）</h2><p><code>&lt;!DOCTYPE heml&gt;</code>：采取html5来显示网页（放在网页文档开头）</p><p><code>&lt;html lang=&quot;en&quot;&gt;</code>:  当前文档的显示语言 （en为英文；zh-CN为简体中文）</p><p><code>&lt;meta charset=&quot;UTF-8&quot;&gt;</code>:  字符集方便计算机识别和存储各种文字：</p><p><img src="../imgs/image-20221021102733737.png" alt="image-20221021102733737"></p><h2 id="5-常用标签语义"><a href="#5-常用标签语义" class="headerlink" title="5.常用标签语义"></a>5.常用标签语义</h2><h3 id="1-标题标签"><a href="#1-标题标签" class="headerlink" title="1.标题标签"></a>1.标题标签</h3><p>​     分为六个等级，<code>&lt;h1&gt;-&lt;h6&gt;</code>作为标题使用，<strong>并按照重要性依次递减</strong>。</p><p>​     加上标题的文字会自动加粗出列，相应字号也会依次变大，且每个标题独占一行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1&gt; 一级标题 &lt;/h1&gt;</span><br></pre></td></tr></table></figure><h3 id="2-段落与换行标签"><a href="#2-段落与换行标签" class="headerlink" title="2.段落与换行标签"></a>2.段落与换行标签</h3><p>​    将一段文字进行段落显示，将所得的网页文件进行分段处理显示。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt;分段内容&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>​    在html中，一个段落的文字会从左到右依次排列，直到浏览器右端，然后才自动换行。若是希望某段文本强制换行显示，需要使用换行标签<code>&lt;br /&gt;</code>，即单标签。</p><p>​    可见br无起始和结束标志，表明一段文字一但遇见该标签便换行，但仅仅是另起一行显示，并不是段落中显示。</p><h3 id="3-文本格式化标签"><a href="#3-文本格式化标签" class="headerlink" title="3.文本格式化标签"></a>3.文本格式化标签</h3><p>​    需要对文字设置粗体，斜体或者下划线的效果，让文字以特殊方式显示，常用标签如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;strong&gt;加粗内容&lt;/strong&gt;//加粗（推荐）</span><br><span class="line">&lt;b&gt;加粗内容&lt;/b&gt;//加粗</span><br><span class="line">&lt;em&gt;倾斜内容&lt;/em&gt;//斜体（推荐）</span><br><span class="line">&lt;i&gt;倾斜内容&lt;/i&gt;//斜体</span><br><span class="line">&lt;del&gt;删除线内容&lt;/del&gt;//删除线（推荐）</span><br><span class="line">&lt;s&gt;删除线内容&lt;/s&gt;//删除线</span><br><span class="line">&lt;ins&gt;下划线内容&lt;/ins&gt;//下划线（推荐）</span><br><span class="line">&lt;u&gt;下划线内容&lt;/u&gt;//下划线</span><br></pre></td></tr></table></figure><h3 id="4-div和span标签"><a href="#4-div和span标签" class="headerlink" title="4.div和span标签"></a>4.div和span标签</h3><p>​    <code>&lt;div&gt;,&lt;span&gt;</code>没有语义，是一个盒子，用来放图片、文字等内容，用以布置网站：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt; 内容 &lt;/div&gt;</span><br><span class="line">&lt;span&gt; 内容 &lt;/span&gt;</span><br></pre></td></tr></table></figure><p>​    div：每个标签独占一行，一行仅可放一个（大盒子）</p><p>​    span：每个标签跨行显示，一行上可放多个（小盒子）</p><h3 id="5-图像标签"><a href="#5-图像标签" class="headerlink" title="5.图像标签"></a>5.图像标签</h3><h4 id="1-标签用法"><a href="#1-标签用法" class="headerlink" title="1.标签用法"></a>1.标签用法</h4><p>​    <code>&lt;img&gt;</code>标签用来定对应html的页面图像</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;图像url链接&quot; /&gt;</span><br></pre></td></tr></table></figure><p>​    其中src是img标签的属性，用以存放对应的文件路径和文件名，</p><p>​     常用其他属性如下（不分先后顺序）：<img src="../imgs/image-20221021154528100.png" alt="image-20221021154528100"></p><h4 id="2-图片标签中的文件夹利用"><a href="#2-图片标签中的文件夹利用" class="headerlink" title="2.图片标签中的文件夹利用"></a>2.图片标签中的文件夹利用</h4><p>根目录：打开目录文件夹的第一层就是根目录</p><p>​    目录文件夹：就是普通文件夹，里面只不过存放了我们做页面需要的相关素材，比如html文件等</p><p>​    相对路径：图片相对于HTML文件在文件夹的页面位置：</p><p><img src="../imgs/image-20221021155627145.png" alt="image-20221021155627145"></p><p>​    绝对路径：图片在目录下的绝对位置，即在电脑中的具体文件位置，若是改计算机无对应文件路径，则无法显示</p><p>​    例如：H:\myblog\source\imgs    </p><h3 id="6-超链接标签"><a href="#6-超链接标签" class="headerlink" title="6.超链接标签"></a>6.超链接标签</h3><h4 id="1-标签用法-1"><a href="#1-标签用法-1" class="headerlink" title="1.标签用法"></a>1.标签用法</h4><p>​    用以链接到其他页面的标签，语法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;需要跳转的目标链接&quot; target&quot;目标窗口弹出方式”&gt;  文本或图像  &lt;/a&gt;</span><br></pre></td></tr></table></figure><p>​    其中两个属性的作用如下：</p><p><img src="../imgs/image-20221021161238668.png" alt="image-20221021161238668"></p><p>​    注：target标签中，_self标签表示在本窗口中打开，为默认值</p><h4 id="2-其他链接"><a href="#2-其他链接" class="headerlink" title="2.其他链接"></a>2.其他链接</h4><p>​    <strong>内部链接</strong>：在网页内部页面的相互链接，直接链接内部页面名称即可</p><p>​    如：<code>&lt;a href=&quot;index.html&quot;&gt;  首页 &lt;/a&gt;</code>为网站中返回首页的代码</p><p>​    <strong>空链接</strong>：没有确定链接的目标，</p><p>​    如<code>&lt;a href=&quot;#&quot;&gt; 首页 &lt;/a&gt;</code>会指向空的页面</p><p>​    <strong>下载链接</strong>：用以下载文件，</p><p>​    如<code>&lt;a href=&quot;home.zip&quot;&gt; 下载文件 &lt;/a&gt;</code>会下载对应的文件</p><p>​    <strong>网络元素链接</strong>：在网页中的各种网页元素，如文本、表格、图像等</p><p>​    如：<code>&lt;a href=&quot;www.baidu.com&quot;&gt; &lt;img scr=&quot;img.jpg&quot; /&gt; &lt;/a&gt;</code>点开图片会跳转至对应链接</p><p>​    <strong>锚点链接</strong>：点击链接会快速定位到网络页面的某个位置</p><p>​    设置需要点击的地方的href属性值为<strong><em>#名字</em></strong>的形式</p><p>​    如<code>&lt;a href=&quot;#two&quot;&gt; 第二季 &lt;/a&gt;&gt;</code></p><p>​    找到需要跳转的目标位置，并将其他原有的为自己创建一个标签并添加一个id属性为一开始定义的名字</p><p>​    如：<code>&lt;h3 id=&quot;two&quot;&gt; 第二季介绍&lt;/h3&gt;</code></p><p>​    对如上两处定义完后，在网页中点击第二季会直接跳转到第二季介绍的位置</p><p>​    </p>]]></content>
    
    
    <summary type="html">这是html入门语法记录</summary>
    
    
    
    <category term="前端学习" scheme="http://example.com/categories/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0/"/>
    
    
  </entry>
  
  <entry>
    <title>测试文章背景</title>
    <link href="http://example.com/undefined/1f934f99.html"/>
    <id>http://example.com/undefined/1f934f99.html</id>
    <published>2022-09-14T20:46:28.000Z</published>
    <updated>2022-10-26T07:39:33.754Z</updated>
    
    <content type="html"><![CDATA[<p>  这是一个测试博客独立背景配置的文件</p>]]></content>
    
    
    <summary type="html">测试文章独立背景配置</summary>
    
    
    
    <category term="测试集" scheme="http://example.com/categories/%E6%B5%8B%E8%AF%95%E9%9B%86/"/>
    
    
    <category term="butterfly魔改记录" scheme="http://example.com/tags/butterfly%E9%AD%94%E6%94%B9%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>action自动部署</title>
    <link href="http://example.com/undefined/a1e6876a.html"/>
    <id>http://example.com/undefined/a1e6876a.html</id>
    <published>2022-09-13T19:42:31.000Z</published>
    <updated>2022-10-26T07:39:33.754Z</updated>
    
    <content type="html"><![CDATA[<h1 id="自动部署以及typora常用写作语法"><a href="#自动部署以及typora常用写作语法" class="headerlink" title="自动部署以及typora常用写作语法"></a>自动部署以及typora常用写作语法</h1><h2 id="1-利用github-action实现更新博客"><a href="#1-利用github-action实现更新博客" class="headerlink" title="1.利用github action实现更新博客"></a>1.利用github action实现更新博客</h2><p>   由于随着hexo框架下的博客文件越来越大，利用hexo clean/g/d三步代码会使得上传至服务器越来越慢，利用github action对博客进行处理后相对简便，下为git bush 下对博客进行更新的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;更新内容&quot;</span><br><span class="line">git push origin main #由于github的仓库主branch改成了main</span><br></pre></td></tr></table></figure><h2 id="2-typora常用博客语法"><a href="#2-typora常用博客语法" class="headerlink" title="2.typora常用博客语法"></a>2.typora常用博客语法</h2><h3 id="1-插入图片"><a href="#1-插入图片" class="headerlink" title="1.插入图片"></a>1.插入图片</h3><p>格式-&gt;图像-&gt;设置图片根目录-&gt;选取<strong>source</strong>作为根目录</p><p><img src="/imgs/image-20220913214000340.png" alt="image-20220913214000340"></p><p>利用qq截图可直接粘粘在文章中，图片文件会自动存在imgs文件夹中</p><h3 id="2-添加封面"><a href="#2-添加封面" class="headerlink" title="2.添加封面"></a>2.添加封面</h3><p>在文章顶部添加封面cover对应图片的URL链接保存提交即可</p><p><img src="/imgs/image-20220913220322196.png" alt="image-20220913220322196"></p><h3 id="3-文章顶部图"><a href="#3-文章顶部图" class="headerlink" title="3.文章顶部图"></a>3.文章顶部图</h3><p>  在文章顶部添加top-img:及其对应URL链接即可</p><p>  注意在冒号后要加一个空格，不然会报错</p>]]></content>
    
    
    <summary type="html">自动部署hexo博客更新</summary>
    
    
    
    <category term="buttfly魔改记录" scheme="http://example.com/categories/buttfly%E9%AD%94%E6%94%B9%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="butterfly魔改记录" scheme="http://example.com/tags/butterfly%E9%AD%94%E6%94%B9%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
